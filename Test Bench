module tb;
    // Inputs
    reg card_in;
    reg [3:0] pin;
    reg [1:0] menu_select;
    reg [20:0] amount_withdraw;
    reg another_txn;
    reg clk;
    reg reset;

    // Outputs
    wire error_msg;
    wire txn_success;
    wire [20:0] balance_amount;

    // Instantiating Unit Under Test (UUT)
    atm_controller uut (
        .card_in(card_in),
        .pin(pin),
        .menu_select(menu_select),
        .amount_withdraw(amount_withdraw),
        .another_txn(another_txn),
        .clk(clk),
        .reset(reset),
        .error_msg(error_msg),
        .txn_success(txn_success),
        .balance_amount(balance_amount)
    );

    // Generating clock
    always #5 clk = ~clk;  // Clock time period: 10 ns

    initial begin
        // Initializing Inputs
        clk = 0;
        reset = 1; 
        card_in = 0;
        pin = 4'b0000;
        menu_select = 2'b10;
        amount_withdraw = 0;
        another_txn = 0;

        // Waiting for reset to complete
        #10 reset = 0;

        // Test Case 1: Insert card and verify PIN (valid case)
        #10 card_in = 1;  
        #10 pin = 4'b1001; 
        #20 menu_select = 2'b00;  // Selected "Check Balance"
        #20;  //balance to display

        // Test Case 2: Withdraw money
        #10 menu_select = 2'b01;  // Selected "Withdraw"
        amount_withdraw = 21'd500;  // Withdraw 500 units
        #20;  //transaction to complete

        // Test Case 3: Testing with incorrect PIN (3 attempts)
        #10 card_in = 0;  // Remove card
        #10 card_in = 1;  // Insert card again
        pin = 4'b0001;  // Entered wrong PIN
        #20 pin = 4'b0010;  // Entered wrong PIN again
        #20 pin = 4'b0100;  // Entered wrong PIN for the third time
        #20;  // Check error message

        // Test Case 4: Performing multiple transactions
        #10 card_in = 1;  // Insert card
        pin = 4'b1001;  // Enter correct PIN
        #20 menu_select = 2'b01;  // Withdraw money
        amount_withdraw = 21'd200;  // Withdraw 200 units
        another_txn = 1;  // Perform another transaction
        #20 menu_select = 2'b00;  // Check Balance
        another_txn = 0;  // End transaction
        #20;
        
        $display("Balance Amount: %d", balance_amount);
        
        // End of simulation
        $stop;
    end
endmodule
